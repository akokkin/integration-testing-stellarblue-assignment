{
	"info": {
		"_postman_id": "b44b4158-6564-4024-abfe-05dc8c5cfd2c",
		"name": "Stellar-Blue-Part-C",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19911314"
	},
	"item": [
		{
			"name": "Assert API is running",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 - API is up & running\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{localhostUri}}/docs",
					"host": [
						"{{localhostUri}}"
					],
					"path": [
						"docs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Item (Negative - Name)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": true,\r\n  \"description\": \"This is an item description\",\r\n  \"price\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhostUri}}/items",
					"host": [
						"{{localhostUri}}"
					],
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Item (Negative - Description)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Item-Name\",\r\n  \"description\": 55,\r\n  \"price\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhostUri}}/items",
					"host": [
						"{{localhostUri}}"
					],
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Item (Negative - Price)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Item-Name\",\r\n  \"description\": \"Description\",\r\n  \"price\": \"foo\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhostUri}}/items",
					"host": [
						"{{localhostUri}}"
					],
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Item",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Item was created, itemId was saved\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).eqls(\"Item-name\");\r",
							"    pm.expect(jsonData.description).eqls(\"This is an item description\");\r",
							"    pm.expect(jsonData.price).eqls(10.0);\r",
							"    pm.expect(jsonData.id).is.a('number');\r",
							"    pm.environment.set(\"itemId\", jsonData.id)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Item-name\",\r\n  \"description\": \"This is an item description\",\r\n  \"price\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhostUri}}/items",
					"host": [
						"{{localhostUri}}"
					],
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve Item",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(() => { }, 1000)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Item was retrieved, its values are correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).eqls(\"Item-name\");\r",
							"    pm.expect(jsonData.description).eqls(\"This is an item description\");\r",
							"    pm.expect(jsonData.price).eqls(10.0);\r",
							"    pm.expect(jsonData.id).eqls(pm.environment.get(\"itemId\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{localhostUri}}/items/{{itemId}}",
					"host": [
						"{{localhostUri}}"
					],
					"path": [
						"items",
						"{{itemId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Item (Negative - Name)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": true,\r\n  \"description\": \"This is an item description\",\r\n  \"price\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhostUri}}/items/{{itemId}}",
					"host": [
						"{{localhostUri}}"
					],
					"path": [
						"items",
						"{{itemId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Item (Negative - Description)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Item-Name\",\r\n  \"description\": 55,\r\n  \"price\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhostUri}}/items/{{itemId}}",
					"host": [
						"{{localhostUri}}"
					],
					"path": [
						"items",
						"{{itemId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Item (Negative - Price)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Item-Name\",\r\n  \"description\": \"Description\",\r\n  \"price\": \"foo\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhostUri}}/items/{{itemId}}",
					"host": [
						"{{localhostUri}}"
					],
					"path": [
						"items",
						"{{itemId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Item",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(() => { }, 1000)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Item was updated, its values are correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).eqls(\"New-Item-name\");\r",
							"    pm.expect(jsonData.description).eqls(\"This is a new item description\");\r",
							"    pm.expect(jsonData.price).eqls(100.0);\r",
							"    pm.expect(jsonData.id).eqls(pm.environment.get(\"itemId\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"New-Item-name\",\r\n    \"description\": \"This is a new item description\",\r\n    \"price\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhostUri}}/items/{{itemId}}",
					"host": [
						"{{localhostUri}}"
					],
					"path": [
						"items",
						"{{itemId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve Item",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(() => { }, 1000)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Item was retrieved, its values are correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).eqls(\"New-Item-name\");\r",
							"    pm.expect(jsonData.description).eqls(\"This is a new item description\");\r",
							"    pm.expect(jsonData.price).eqls(100.0);\r",
							"    pm.expect(jsonData.id).eqls(pm.environment.get(\"itemId\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{localhostUri}}/items/{{itemId}}",
					"host": [
						"{{localhostUri}}"
					],
					"path": [
						"items",
						"{{itemId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Item",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(() => { }, 1000)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{localhostUri}}/items/{{itemId}}",
					"host": [
						"{{localhostUri}}"
					],
					"path": [
						"items",
						"{{itemId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve Item (Negative)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(() => { }, 1000)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 - Item was deleted.\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{localhostUri}}/items/{{itemId}}",
					"host": [
						"{{localhostUri}}"
					],
					"path": [
						"items",
						"{{itemId}}"
					]
				}
			},
			"response": []
		}
	]
}